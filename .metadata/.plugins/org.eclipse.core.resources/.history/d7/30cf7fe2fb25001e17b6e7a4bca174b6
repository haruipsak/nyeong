package project;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class BoardDAO {
	private Connection conn;//데이터베이스에 접근하게 해주는 하나의 객체
	private ResultSet rs;
	
	public BoardDAO() {
			try {//예외처리
			String dbURL = "jdbc:h2:tcp://localhost/~/pt";
			Class.forName("org.h2.Driver");//드라이버를 찾는다.
			//드라이버 접속할 수 있도록 매개체 역할을 하는 하나의 라이브러리
			conn=DriverManager.getConnection(dbURL);
		   }catch(Exception e) {
			e.printStackTrace();
		}
	}
	
	// 뉴스 목록 전체를 가지고 오기위한  메서드
	public ArrayList<BoardDTO> getAll() {
		ArrayList<BoardDTO> board = new ArrayList<>();
		
		String sql = "select num, name, subject, TO_CHAR(date, 'yyyy-MM-dd hh:mm:ss') as cdate";
		sql += ", content from board";
		
		PreparedStatement pstmt;
		try {
		pstmt=conn.prepareStatement(sql);
				rs=pstmt.executeQuery();
		while(rs.next()) {
            BoardDTO b = new BoardDTO();
           b.setNum(rs.getInt(1));
           b.setName(rs.getString(2));
           b.setSubject(rs.getString(3));
           b.setContent(rs.getString(4));
           b.setDate(rs.getString(5));
           	
           board.add(b);//list에 해당 인스턴스를 담는다.
		}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
	}
	
	public ArrayList<BoardDTO> getBoard(int num) throws SQLException {
		Connection conn = open();
		ArrayList<BoardDTO> board = new ArrayList<>();
		
		String sql = "select num, name, subject, content, TO_CHAR(date, 'yyyy-MM-dd hh:mm:ss') as cdate";
		sql += ", content from board";
		
		PreparedStatement pstmt = conn.prepareStatement(sql);
		ResultSet rs = pstmt.executeQuery();
		pstmt.setInt(1, num);
		
		try(conn; pstmt; rs) {
			while(rs.next()) {
				BoardDTO dto = new BoardDTO();
				dto.setNum(rs.getInt("num"));
				dto.setName(rs.getString("name"));
				dto.setSubject(rs.getString("subject"));
				dto.setContent(rs.getString("content"));;
				dto.setDate(rs.getString("cdate"));
				board.add(dto);
			}
			return board;
		}
	}

	
	// 뉴스를 추가하는 메서드 인자로 DO 클래스인 News 타입을 받아 sql완성
	public void addBoard(BoardDTO b) throws Exception {
		Connection conn = open();
		
		String sql = "insert into board(name, subject, content, date)";
		sql += " values(?,?, ?, CURRENT_TIMESTAMP())";
		PreparedStatement pstmt = conn.prepareStatement(sql);
		
		try(conn; pstmt){
			pstmt.setString(1, b.getName());
			pstmt.setString(2, b.getSubject());
			pstmt.setString(3, b.getContent());
			pstmt.executeUpdate();
		}
	}
	
	// 뉴스 삭제를 위한 메서드 , 삭제할 뉴스의  aid를 받아 삭세한다.
	public void delBoard(int num) throws SQLException {
		Connection conn = open();
		
		String sql = "delete from board where num=?";
		PreparedStatement pstmt = conn.prepareStatement(sql);
		
		try(conn; pstmt) {
			pstmt.setInt(1, num);
			//삭제된 뉴스 기사가 없을 경우
			if(pstmt.executeUpdate() == 0) {
				throw  new SQLException("데이터 삭제 에러");
			}
		}
	}
	
	
	
	
}
